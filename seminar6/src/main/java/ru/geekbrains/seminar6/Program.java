package ru.geekbrains.seminar6;

// Изучаем принципы SOLD

// Первый принцип - принцип единственной ответственности (single responsibility)
// каждый класс выполняет свою задачу
// (см. srp1 и srp2 package)

// Второй - принцип открытости и закрытости (ocp, open-closed principle)
// программные сущности (классы, методы, модули) должны быть открыты для расширения
// но закрыты для модификации
// проектируем приложение только так, чтобы если пришлось
// расширять приложение - старое изменять не придется, программа должна быть расширяема

// Третий - принцип подстановки Барбары Лисков (lsp, Liskov substitution principle)
// критерий для оценки качества принимаемых решений при построении иерархии построения типов
// позволяет проверить, правильно ли выстроена ирерахия типов (тест)

// Четвертый - принцип разделения интерфейсов (принцип разделения абстракций) (isp, interface segregation principle)
// много интерфейсов (абстракций) специально предназначенных для конкректных типов
// всегда лучше интерфейса общего назначения

// Пятый - принцип инверсии зависимостей
// заложен в MVP и MVC
// модули верхних уровней не должны напрямую зависеть от модулей нижнего уровня
// зависимость определяется на уровне абстракций - интерфейсов
// абстракции не должны зависеть от деталей, детали должны зависеть от абстракицй

public class Program {
    public static void main(String[] args) {

    }
}
